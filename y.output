

Terminals which are not used:

   TRUE
   FALSE
   END
   nomefuncao


Conflict in state 92 between rule 57 and token '+' resolved as reduce.
Conflict in state 92 between rule 57 and token '-' resolved as reduce.
Conflict in state 92 between rule 57 and token '*' resolved as shift.
Conflict in state 92 between rule 57 and token '/' resolved as shift.
Conflict in state 92 between rule 57 and token '%' resolved as shift.
Conflict in state 93 between rule 58 and token '+' resolved as reduce.
Conflict in state 93 between rule 58 and token '-' resolved as reduce.
Conflict in state 93 between rule 58 and token '*' resolved as shift.
Conflict in state 93 between rule 58 and token '/' resolved as shift.
Conflict in state 93 between rule 58 and token '%' resolved as shift.
Conflict in state 94 between rule 60 and token '+' resolved as reduce.
Conflict in state 94 between rule 60 and token '-' resolved as reduce.
Conflict in state 94 between rule 60 and token '*' resolved as reduce.
Conflict in state 94 between rule 60 and token '/' resolved as reduce.
Conflict in state 94 between rule 60 and token '%' resolved as reduce.
Conflict in state 95 between rule 61 and token '+' resolved as reduce.
Conflict in state 95 between rule 61 and token '-' resolved as reduce.
Conflict in state 95 between rule 61 and token '*' resolved as reduce.
Conflict in state 95 between rule 61 and token '/' resolved as reduce.
Conflict in state 95 between rule 61 and token '%' resolved as reduce.
Conflict in state 96 between rule 59 and token '+' resolved as reduce.
Conflict in state 96 between rule 59 and token '-' resolved as reduce.
Conflict in state 96 between rule 59 and token '*' resolved as reduce.
Conflict in state 96 between rule 59 and token '/' resolved as reduce.
Conflict in state 96 between rule 59 and token '%' resolved as reduce.
State 132 contains 1 shift/reduce conflict.

Grammar
rule 1    @1 ->		/* empty */
rule 2    @2 ->		/* empty */
rule 3    @3 ->		/* empty */
rule 4    Prog -> @1 ListaDecla @2 ListaFun @3 ListInst
rule 5    ListaFun -> ListaFun Funcao
rule 6    ListaFun ->		/* empty */
rule 7    ListaDecla -> ListaDecla Decla
rule 8    ListaDecla ->		/* empty */
rule 9    ListInst -> ListInst Inst
rule 10   ListInst -> Inst
rule 11   @4 ->		/* empty */
rule 12   @5 ->		/* empty */
rule 13   Funcao -> '#' Tipo var @4 '(' ListaArg ')' @5 '{' ListaDecla ListInst '}'
rule 14   ListaArg ->		/* empty */
rule 15   ListaArg -> ListaArg2
rule 16   ListaArg2 -> Tipo var
rule 17   ListaArg2 -> ListaArg2 ',' Tipo var
rule 18   Decla -> INT var ';'
rule 19   Decla -> INT var '[' num ']' ';'
rule 20   Tipo -> VOID
rule 21   Tipo -> INT
rule 22   ConjInst ->		/* empty */
rule 23   ConjInst -> '{' ListInst '}'
rule 24   Inst -> If
rule 25   Inst -> While
rule 26   Inst -> DoWhile
rule 27   Inst -> For
rule 28   Inst -> Atrib ';'
rule 29   Inst -> Printi ';'
rule 30   Inst -> Scani ';'
rule 31   Inst -> RETURN Exp ';'
rule 32   Inst -> ELSE
rule 33   VarAtr -> var
rule 34   Atrib -> VarAtr '=' Exp
rule 35   Atrib -> VarAtr '+' '+'
rule 36   @6 ->		/* empty */
rule 37   Atrib -> VarAtr @6 '[' Exp ']' '=' Exp
rule 38   Printi -> PRINTI '(' Exp ')'
rule 39   Scani -> SCANI '(' VarAtr ')'
rule 40   @7 ->		/* empty */
rule 41   @8 ->		/* empty */
rule 42   @9 ->		/* empty */
rule 43   If -> IF @7 TestExpL @8 ConjInst @9 Else
rule 44   Else ->		/* empty */
rule 45   Else -> ELSE ConjInst
rule 46   @10 ->		/* empty */
rule 47   @11 ->		/* empty */
rule 48   While -> WHILE @10 TestExpL @11 ConjInst
rule 49   @12 ->		/* empty */
rule 50   DoWhile -> DO @12 ConjInst WHILE TestExpL ';'
rule 51   For -> FOR ForHeader ConjInst
rule 52   @13 ->		/* empty */
rule 53   @14 ->		/* empty */
rule 54   ForHeader -> '(' ForAtrib ';' @13 ExpL ';' @14 ForAtrib ')'
rule 55   ForAtrib -> Atrib
rule 56   ForAtrib ->		/* empty */
rule 57   Exp -> Exp '+' Exp
rule 58   Exp -> Exp '-' Exp
rule 59   Exp -> Exp '%' Exp
rule 60   Exp -> Exp '*' Exp
rule 61   Exp -> Exp '/' Exp
rule 62   Exp -> '(' Exp ')'
rule 63   Exp -> num
rule 64   Exp -> VarAtr
rule 65   @15 ->		/* empty */
rule 66   Exp -> VarAtr @15 '[' Exp ']'
rule 67   @16 ->		/* empty */
rule 68   Exp -> var @16 '(' FunArgs ')'
rule 69   FunArgs ->		/* empty */
rule 70   FunArgs -> FunArgs2
rule 71   FunArgs2 -> Exp
rule 72   FunArgs2 -> FunArgs2 ',' Exp
rule 73   TestExpL -> '(' ExpL ')'
rule 74   ExpL -> Exp '=' '=' Exp
rule 75   ExpL -> Exp '!' '=' Exp
rule 76   ExpL -> Exp '>' '=' Exp
rule 77   ExpL -> Exp '<' '=' Exp
rule 78   ExpL -> Exp '<' Exp
rule 79   ExpL -> Exp '>' Exp
rule 80   @17 ->		/* empty */
rule 81   ExpL -> '(' ExpL ')' @17 '&' '&' '(' ExpL ')'
rule 82   ExpL -> '(' ExpL ')' '|' '|' '(' ExpL ')'

Terminals, with rules where they appear

$ (-1)
'!' (33) 75
'#' (35) 13
'%' (37) 59
'&' (38) 81
'(' (40) 13 38 39 54 62 68 73 81 82
')' (41) 13 38 39 54 62 68 73 81 82
'*' (42) 60
'+' (43) 35 57
',' (44) 17 72
'-' (45) 58
'/' (47) 61
';' (59) 18 19 28 29 30 31 50 54
'<' (60) 77 78
'=' (61) 34 37 74 75 76 77
'>' (62) 76 79
'[' (91) 19 37 66
']' (93) 19 37 66
'{' (123) 13 23
'|' (124) 82
'}' (125) 13 23
error (256)
INT (258) 18 19 21
WHILE (259) 48 50
FOR (260) 51
IF (261) 43
ELSE (262) 32 45
RETURN (263) 31
VOID (264) 20
PRINTI (265) 38
SCANI (266) 39
TRUE (267)
FALSE (268)
DO (269) 50
END (270)
var (271) 13 16 17 18 19 33 68
nomefuncao (272)
num (273) 19 63

Nonterminals, with rules where they appear

Prog (39)
    on left: 4
@1 (40)
    on left: 1, on right: 4
@2 (41)
    on left: 2, on right: 4
@3 (42)
    on left: 3, on right: 4
ListaFun (43)
    on left: 5 6, on right: 4 5
ListaDecla (44)
    on left: 7 8, on right: 4 7 13
ListInst (45)
    on left: 9 10, on right: 4 9 13 23
Funcao (46)
    on left: 13, on right: 5
@4 (47)
    on left: 11, on right: 13
@5 (48)
    on left: 12, on right: 13
ListaArg (49)
    on left: 14 15, on right: 13
ListaArg2 (50)
    on left: 16 17, on right: 15 17
Decla (51)
    on left: 18 19, on right: 7
Tipo (52)
    on left: 20 21, on right: 13 16 17
ConjInst (53)
    on left: 22 23, on right: 43 45 48 50 51
Inst (54)
    on left: 24 25 26 27 28 29 30 31 32, on right: 9 10
VarAtr (55)
    on left: 33, on right: 34 35 37 39 64 66
Atrib (56)
    on left: 34 35 37, on right: 28 55
@6 (57)
    on left: 36, on right: 37
Printi (58)
    on left: 38, on right: 29
Scani (59)
    on left: 39, on right: 30
If (60)
    on left: 43, on right: 24
@7 (61)
    on left: 40, on right: 43
@8 (62)
    on left: 41, on right: 43
@9 (63)
    on left: 42, on right: 43
Else (64)
    on left: 44 45, on right: 43
While (65)
    on left: 48, on right: 25
@10 (66)
    on left: 46, on right: 48
@11 (67)
    on left: 47, on right: 48
DoWhile (68)
    on left: 50, on right: 26
@12 (69)
    on left: 49, on right: 50
For (70)
    on left: 51, on right: 27
ForHeader (71)
    on left: 54, on right: 51
@13 (72)
    on left: 52, on right: 54
@14 (73)
    on left: 53, on right: 54
ForAtrib (74)
    on left: 55 56, on right: 54
Exp (75)
    on left: 57 58 59 60 61 62 63 64 66 68, on right: 31 34 37 38 57
    58 59 60 61 62 66 71 72 74 75 76 77 78 79
@15 (76)
    on left: 65, on right: 66
@16 (77)
    on left: 67, on right: 68
FunArgs (78)
    on left: 69 70, on right: 68
FunArgs2 (79)
    on left: 71 72, on right: 70 72
TestExpL (80)
    on left: 73, on right: 43 48 50
ExpL (81)
    on left: 74 75 76 77 78 79 81 82, on right: 54 73 81 82
@17 (82)
    on left: 80, on right: 81


state 0

    $default	reduce using rule 1 (@1)

    Prog	go to state 169
    @1  	go to state 1



state 1

    Prog  ->  @1 . ListaDecla @2 ListaFun @3 ListInst   (rule 4)

    $default	reduce using rule 8 (ListaDecla)

    ListaDecla	go to state 2



state 2

    Prog  ->  @1 ListaDecla . @2 ListaFun @3 ListInst   (rule 4)
    ListaDecla  ->  ListaDecla . Decla   (rule 7)

    INT 	shift, and go to state 3

    $default	reduce using rule 2 (@2)

    @2  	go to state 4
    Decla	go to state 5



state 3

    Decla  ->  INT . var ';'   (rule 18)
    Decla  ->  INT . var '[' num ']' ';'   (rule 19)

    var 	shift, and go to state 6



state 4

    Prog  ->  @1 ListaDecla @2 . ListaFun @3 ListInst   (rule 4)

    $default	reduce using rule 6 (ListaFun)

    ListaFun	go to state 7



state 5

    ListaDecla  ->  ListaDecla Decla .   (rule 7)

    $default	reduce using rule 7 (ListaDecla)



state 6

    Decla  ->  INT var . ';'   (rule 18)
    Decla  ->  INT var . '[' num ']' ';'   (rule 19)

    ';' 	shift, and go to state 8
    '[' 	shift, and go to state 9



state 7

    Prog  ->  @1 ListaDecla @2 ListaFun . @3 ListInst   (rule 4)
    ListaFun  ->  ListaFun . Funcao   (rule 5)

    '#' 	shift, and go to state 10

    $default	reduce using rule 3 (@3)

    @3  	go to state 11
    Funcao	go to state 12



state 8

    Decla  ->  INT var ';' .   (rule 18)

    $default	reduce using rule 18 (Decla)



state 9

    Decla  ->  INT var '[' . num ']' ';'   (rule 19)

    num 	shift, and go to state 13



state 10

    Funcao  ->  '#' . Tipo var @4 '(' ListaArg ')' @5 '{' ListaDecla ListInst '}'   (rule 13)

    INT 	shift, and go to state 14
    VOID	shift, and go to state 15

    Tipo	go to state 16



state 11

    Prog  ->  @1 ListaDecla @2 ListaFun @3 . ListInst   (rule 4)

    WHILE	shift, and go to state 17
    FOR 	shift, and go to state 18
    IF  	shift, and go to state 19
    ELSE	shift, and go to state 20
    RETURN	shift, and go to state 21
    PRINTI	shift, and go to state 22
    SCANI	shift, and go to state 23
    DO  	shift, and go to state 24
    var 	shift, and go to state 25

    ListInst	go to state 26
    Inst	go to state 27
    VarAtr	go to state 28
    Atrib	go to state 29
    Printi	go to state 30
    Scani	go to state 31
    If  	go to state 32
    While	go to state 33
    DoWhile	go to state 34
    For 	go to state 35



state 12

    ListaFun  ->  ListaFun Funcao .   (rule 5)

    $default	reduce using rule 5 (ListaFun)



state 13

    Decla  ->  INT var '[' num . ']' ';'   (rule 19)

    ']' 	shift, and go to state 36



state 14

    Tipo  ->  INT .   (rule 21)

    $default	reduce using rule 21 (Tipo)



state 15

    Tipo  ->  VOID .   (rule 20)

    $default	reduce using rule 20 (Tipo)



state 16

    Funcao  ->  '#' Tipo . var @4 '(' ListaArg ')' @5 '{' ListaDecla ListInst '}'   (rule 13)

    var 	shift, and go to state 37



state 17

    While  ->  WHILE . @10 TestExpL @11 ConjInst   (rule 48)

    $default	reduce using rule 46 (@10)

    @10 	go to state 38



state 18

    For  ->  FOR . ForHeader ConjInst   (rule 51)

    '(' 	shift, and go to state 39

    ForHeader	go to state 40



state 19

    If  ->  IF . @7 TestExpL @8 ConjInst @9 Else   (rule 43)

    $default	reduce using rule 40 (@7)

    @7  	go to state 41



state 20

    Inst  ->  ELSE .   (rule 32)

    $default	reduce using rule 32 (Inst)



state 21

    Inst  ->  RETURN . Exp ';'   (rule 31)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 46



state 22

    Printi  ->  PRINTI . '(' Exp ')'   (rule 38)

    '(' 	shift, and go to state 47



state 23

    Scani  ->  SCANI . '(' VarAtr ')'   (rule 39)

    '(' 	shift, and go to state 48



state 24

    DoWhile  ->  DO . @12 ConjInst WHILE TestExpL ';'   (rule 50)

    $default	reduce using rule 49 (@12)

    @12 	go to state 49



state 25

    VarAtr  ->  var .   (rule 33)

    $default	reduce using rule 33 (VarAtr)



state 26

    Prog  ->  @1 ListaDecla @2 ListaFun @3 ListInst .   (rule 4)
    ListInst  ->  ListInst . Inst   (rule 9)

    WHILE	shift, and go to state 17
    FOR 	shift, and go to state 18
    IF  	shift, and go to state 19
    ELSE	shift, and go to state 20
    RETURN	shift, and go to state 21
    PRINTI	shift, and go to state 22
    SCANI	shift, and go to state 23
    DO  	shift, and go to state 24
    var 	shift, and go to state 25

    $default	reduce using rule 4 (Prog)

    Inst	go to state 50
    VarAtr	go to state 28
    Atrib	go to state 29
    Printi	go to state 30
    Scani	go to state 31
    If  	go to state 32
    While	go to state 33
    DoWhile	go to state 34
    For 	go to state 35



state 27

    ListInst  ->  Inst .   (rule 10)

    $default	reduce using rule 10 (ListInst)



state 28

    Atrib  ->  VarAtr . '=' Exp   (rule 34)
    Atrib  ->  VarAtr . '+' '+'   (rule 35)
    Atrib  ->  VarAtr . @6 '[' Exp ']' '=' Exp   (rule 37)

    '+' 	shift, and go to state 51
    '=' 	shift, and go to state 52

    $default	reduce using rule 36 (@6)

    @6  	go to state 53



state 29

    Inst  ->  Atrib . ';'   (rule 28)

    ';' 	shift, and go to state 54



state 30

    Inst  ->  Printi . ';'   (rule 29)

    ';' 	shift, and go to state 55



state 31

    Inst  ->  Scani . ';'   (rule 30)

    ';' 	shift, and go to state 56



state 32

    Inst  ->  If .   (rule 24)

    $default	reduce using rule 24 (Inst)



state 33

    Inst  ->  While .   (rule 25)

    $default	reduce using rule 25 (Inst)



state 34

    Inst  ->  DoWhile .   (rule 26)

    $default	reduce using rule 26 (Inst)



state 35

    Inst  ->  For .   (rule 27)

    $default	reduce using rule 27 (Inst)



state 36

    Decla  ->  INT var '[' num ']' . ';'   (rule 19)

    ';' 	shift, and go to state 57



state 37

    Funcao  ->  '#' Tipo var . @4 '(' ListaArg ')' @5 '{' ListaDecla ListInst '}'   (rule 13)

    $default	reduce using rule 11 (@4)

    @4  	go to state 58



state 38

    While  ->  WHILE @10 . TestExpL @11 ConjInst   (rule 48)

    '(' 	shift, and go to state 59

    TestExpL	go to state 60



state 39

    ForHeader  ->  '(' . ForAtrib ';' @13 ExpL ';' @14 ForAtrib ')'   (rule 54)

    var 	shift, and go to state 25

    $default	reduce using rule 56 (ForAtrib)

    VarAtr	go to state 28
    Atrib	go to state 61
    ForAtrib	go to state 62



state 40

    For  ->  FOR ForHeader . ConjInst   (rule 51)

    '{' 	shift, and go to state 63

    $default	reduce using rule 22 (ConjInst)

    ConjInst	go to state 64



state 41

    If  ->  IF @7 . TestExpL @8 ConjInst @9 Else   (rule 43)

    '(' 	shift, and go to state 59

    TestExpL	go to state 65



state 42

    VarAtr  ->  var .   (rule 33)
    Exp  ->  var . @16 '(' FunArgs ')'   (rule 68)

    '(' 	reduce using rule 67 (@16)
    $default	reduce using rule 33 (VarAtr)

    @16 	go to state 66



state 43

    Exp  ->  num .   (rule 63)

    $default	reduce using rule 63 (Exp)



state 44

    Exp  ->  '(' . Exp ')'   (rule 62)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 67



state 45

    Exp  ->  VarAtr .   (rule 64)
    Exp  ->  VarAtr . @15 '[' Exp ']'   (rule 66)

    $default	reduce using rule 64 (Exp)

    @15 	go to state 68



state 46

    Inst  ->  RETURN Exp . ';'   (rule 31)
    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    ';' 	shift, and go to state 74



state 47

    Printi  ->  PRINTI '(' . Exp ')'   (rule 38)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 75



state 48

    Scani  ->  SCANI '(' . VarAtr ')'   (rule 39)

    var 	shift, and go to state 25

    VarAtr	go to state 76



state 49

    DoWhile  ->  DO @12 . ConjInst WHILE TestExpL ';'   (rule 50)

    '{' 	shift, and go to state 63

    $default	reduce using rule 22 (ConjInst)

    ConjInst	go to state 77



state 50

    ListInst  ->  ListInst Inst .   (rule 9)

    $default	reduce using rule 9 (ListInst)



state 51

    Atrib  ->  VarAtr '+' . '+'   (rule 35)

    '+' 	shift, and go to state 78



state 52

    Atrib  ->  VarAtr '=' . Exp   (rule 34)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 79



state 53

    Atrib  ->  VarAtr @6 . '[' Exp ']' '=' Exp   (rule 37)

    '[' 	shift, and go to state 80



state 54

    Inst  ->  Atrib ';' .   (rule 28)

    $default	reduce using rule 28 (Inst)



state 55

    Inst  ->  Printi ';' .   (rule 29)

    $default	reduce using rule 29 (Inst)



state 56

    Inst  ->  Scani ';' .   (rule 30)

    $default	reduce using rule 30 (Inst)



state 57

    Decla  ->  INT var '[' num ']' ';' .   (rule 19)

    $default	reduce using rule 19 (Decla)



state 58

    Funcao  ->  '#' Tipo var @4 . '(' ListaArg ')' @5 '{' ListaDecla ListInst '}'   (rule 13)

    '(' 	shift, and go to state 81



state 59

    TestExpL  ->  '(' . ExpL ')'   (rule 73)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 82

    VarAtr	go to state 45
    Exp 	go to state 83
    ExpL	go to state 84



state 60

    While  ->  WHILE @10 TestExpL . @11 ConjInst   (rule 48)

    $default	reduce using rule 47 (@11)

    @11 	go to state 85



state 61

    ForAtrib  ->  Atrib .   (rule 55)

    $default	reduce using rule 55 (ForAtrib)



state 62

    ForHeader  ->  '(' ForAtrib . ';' @13 ExpL ';' @14 ForAtrib ')'   (rule 54)

    ';' 	shift, and go to state 86



state 63

    ConjInst  ->  '{' . ListInst '}'   (rule 23)

    WHILE	shift, and go to state 17
    FOR 	shift, and go to state 18
    IF  	shift, and go to state 19
    ELSE	shift, and go to state 20
    RETURN	shift, and go to state 21
    PRINTI	shift, and go to state 22
    SCANI	shift, and go to state 23
    DO  	shift, and go to state 24
    var 	shift, and go to state 25

    ListInst	go to state 87
    Inst	go to state 27
    VarAtr	go to state 28
    Atrib	go to state 29
    Printi	go to state 30
    Scani	go to state 31
    If  	go to state 32
    While	go to state 33
    DoWhile	go to state 34
    For 	go to state 35



state 64

    For  ->  FOR ForHeader ConjInst .   (rule 51)

    $default	reduce using rule 51 (For)



state 65

    If  ->  IF @7 TestExpL . @8 ConjInst @9 Else   (rule 43)

    $default	reduce using rule 41 (@8)

    @8  	go to state 88



state 66

    Exp  ->  var @16 . '(' FunArgs ')'   (rule 68)

    '(' 	shift, and go to state 89



state 67

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    Exp  ->  '(' Exp . ')'   (rule 62)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    ')' 	shift, and go to state 90



state 68

    Exp  ->  VarAtr @15 . '[' Exp ']'   (rule 66)

    '[' 	shift, and go to state 91



state 69

    Exp  ->  Exp '+' . Exp   (rule 57)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 92



state 70

    Exp  ->  Exp '-' . Exp   (rule 58)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 93



state 71

    Exp  ->  Exp '*' . Exp   (rule 60)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 94



state 72

    Exp  ->  Exp '/' . Exp   (rule 61)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 95



state 73

    Exp  ->  Exp '%' . Exp   (rule 59)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 96



state 74

    Inst  ->  RETURN Exp ';' .   (rule 31)

    $default	reduce using rule 31 (Inst)



state 75

    Printi  ->  PRINTI '(' Exp . ')'   (rule 38)
    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    ')' 	shift, and go to state 97



state 76

    Scani  ->  SCANI '(' VarAtr . ')'   (rule 39)

    ')' 	shift, and go to state 98



state 77

    DoWhile  ->  DO @12 ConjInst . WHILE TestExpL ';'   (rule 50)

    WHILE	shift, and go to state 99



state 78

    Atrib  ->  VarAtr '+' '+' .   (rule 35)

    $default	reduce using rule 35 (Atrib)



state 79

    Atrib  ->  VarAtr '=' Exp .   (rule 34)
    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 34 (Atrib)



state 80

    Atrib  ->  VarAtr @6 '[' . Exp ']' '=' Exp   (rule 37)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 100



state 81

    Funcao  ->  '#' Tipo var @4 '(' . ListaArg ')' @5 '{' ListaDecla ListInst '}'   (rule 13)

    INT 	shift, and go to state 14
    VOID	shift, and go to state 15

    $default	reduce using rule 14 (ListaArg)

    ListaArg	go to state 101
    ListaArg2	go to state 102
    Tipo	go to state 103



state 82

    Exp  ->  '(' . Exp ')'   (rule 62)
    ExpL  ->  '(' . ExpL ')' @17 '&' '&' '(' ExpL ')'   (rule 81)
    ExpL  ->  '(' . ExpL ')' '|' '|' '(' ExpL ')'   (rule 82)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 82

    VarAtr	go to state 45
    Exp 	go to state 104
    ExpL	go to state 105



state 83

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp . '=' '=' Exp   (rule 74)
    ExpL  ->  Exp . '!' '=' Exp   (rule 75)
    ExpL  ->  Exp . '>' '=' Exp   (rule 76)
    ExpL  ->  Exp . '<' '=' Exp   (rule 77)
    ExpL  ->  Exp . '<' Exp   (rule 78)
    ExpL  ->  Exp . '>' Exp   (rule 79)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    '=' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    '>' 	shift, and go to state 108
    '<' 	shift, and go to state 109



state 84

    TestExpL  ->  '(' ExpL . ')'   (rule 73)

    ')' 	shift, and go to state 110



state 85

    While  ->  WHILE @10 TestExpL @11 . ConjInst   (rule 48)

    '{' 	shift, and go to state 63

    $default	reduce using rule 22 (ConjInst)

    ConjInst	go to state 111



state 86

    ForHeader  ->  '(' ForAtrib ';' . @13 ExpL ';' @14 ForAtrib ')'   (rule 54)

    $default	reduce using rule 52 (@13)

    @13 	go to state 112



state 87

    ListInst  ->  ListInst . Inst   (rule 9)
    ConjInst  ->  '{' ListInst . '}'   (rule 23)

    WHILE	shift, and go to state 17
    FOR 	shift, and go to state 18
    IF  	shift, and go to state 19
    ELSE	shift, and go to state 20
    RETURN	shift, and go to state 21
    PRINTI	shift, and go to state 22
    SCANI	shift, and go to state 23
    DO  	shift, and go to state 24
    var 	shift, and go to state 25
    '}' 	shift, and go to state 113

    Inst	go to state 50
    VarAtr	go to state 28
    Atrib	go to state 29
    Printi	go to state 30
    Scani	go to state 31
    If  	go to state 32
    While	go to state 33
    DoWhile	go to state 34
    For 	go to state 35



state 88

    If  ->  IF @7 TestExpL @8 . ConjInst @9 Else   (rule 43)

    '{' 	shift, and go to state 63

    $default	reduce using rule 22 (ConjInst)

    ConjInst	go to state 114



state 89

    Exp  ->  var @16 '(' . FunArgs ')'   (rule 68)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    $default	reduce using rule 69 (FunArgs)

    VarAtr	go to state 45
    Exp 	go to state 115
    FunArgs	go to state 116
    FunArgs2	go to state 117



state 90

    Exp  ->  '(' Exp ')' .   (rule 62)

    $default	reduce using rule 62 (Exp)



state 91

    Exp  ->  VarAtr @15 '[' . Exp ']'   (rule 66)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 118



state 92

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp '+' Exp .   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 57 (Exp)



state 93

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp '-' Exp .   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 58 (Exp)



state 94

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp '*' Exp .   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)


    $default	reduce using rule 60 (Exp)



state 95

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    Exp  ->  Exp '/' Exp .   (rule 61)


    $default	reduce using rule 61 (Exp)



state 96

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp '%' Exp .   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)


    $default	reduce using rule 59 (Exp)



state 97

    Printi  ->  PRINTI '(' Exp ')' .   (rule 38)

    $default	reduce using rule 38 (Printi)



state 98

    Scani  ->  SCANI '(' VarAtr ')' .   (rule 39)

    $default	reduce using rule 39 (Scani)



state 99

    DoWhile  ->  DO @12 ConjInst WHILE . TestExpL ';'   (rule 50)

    '(' 	shift, and go to state 59

    TestExpL	go to state 119



state 100

    Atrib  ->  VarAtr @6 '[' Exp . ']' '=' Exp   (rule 37)
    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    ']' 	shift, and go to state 120



state 101

    Funcao  ->  '#' Tipo var @4 '(' ListaArg . ')' @5 '{' ListaDecla ListInst '}'   (rule 13)

    ')' 	shift, and go to state 121



state 102

    ListaArg  ->  ListaArg2 .   (rule 15)
    ListaArg2  ->  ListaArg2 . ',' Tipo var   (rule 17)

    ',' 	shift, and go to state 122

    $default	reduce using rule 15 (ListaArg)



state 103

    ListaArg2  ->  Tipo . var   (rule 16)

    var 	shift, and go to state 123



state 104

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    Exp  ->  '(' Exp . ')'   (rule 62)
    ExpL  ->  Exp . '=' '=' Exp   (rule 74)
    ExpL  ->  Exp . '!' '=' Exp   (rule 75)
    ExpL  ->  Exp . '>' '=' Exp   (rule 76)
    ExpL  ->  Exp . '<' '=' Exp   (rule 77)
    ExpL  ->  Exp . '<' Exp   (rule 78)
    ExpL  ->  Exp . '>' Exp   (rule 79)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    ')' 	shift, and go to state 90
    '=' 	shift, and go to state 106
    '!' 	shift, and go to state 107
    '>' 	shift, and go to state 108
    '<' 	shift, and go to state 109



state 105

    ExpL  ->  '(' ExpL . ')' @17 '&' '&' '(' ExpL ')'   (rule 81)
    ExpL  ->  '(' ExpL . ')' '|' '|' '(' ExpL ')'   (rule 82)

    ')' 	shift, and go to state 124



state 106

    ExpL  ->  Exp '=' . '=' Exp   (rule 74)

    '=' 	shift, and go to state 125



state 107

    ExpL  ->  Exp '!' . '=' Exp   (rule 75)

    '=' 	shift, and go to state 126



state 108

    ExpL  ->  Exp '>' . '=' Exp   (rule 76)
    ExpL  ->  Exp '>' . Exp   (rule 79)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '=' 	shift, and go to state 127

    VarAtr	go to state 45
    Exp 	go to state 128



state 109

    ExpL  ->  Exp '<' . '=' Exp   (rule 77)
    ExpL  ->  Exp '<' . Exp   (rule 78)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '=' 	shift, and go to state 129

    VarAtr	go to state 45
    Exp 	go to state 130



state 110

    TestExpL  ->  '(' ExpL ')' .   (rule 73)

    $default	reduce using rule 73 (TestExpL)



state 111

    While  ->  WHILE @10 TestExpL @11 ConjInst .   (rule 48)

    $default	reduce using rule 48 (While)



state 112

    ForHeader  ->  '(' ForAtrib ';' @13 . ExpL ';' @14 ForAtrib ')'   (rule 54)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 82

    VarAtr	go to state 45
    Exp 	go to state 83
    ExpL	go to state 131



state 113

    ConjInst  ->  '{' ListInst '}' .   (rule 23)

    $default	reduce using rule 23 (ConjInst)



state 114

    If  ->  IF @7 TestExpL @8 ConjInst . @9 Else   (rule 43)

    $default	reduce using rule 42 (@9)

    @9  	go to state 132



state 115

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    FunArgs2  ->  Exp .   (rule 71)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 71 (FunArgs2)



state 116

    Exp  ->  var @16 '(' FunArgs . ')'   (rule 68)

    ')' 	shift, and go to state 133



state 117

    FunArgs  ->  FunArgs2 .   (rule 70)
    FunArgs2  ->  FunArgs2 . ',' Exp   (rule 72)

    ',' 	shift, and go to state 134

    $default	reduce using rule 70 (FunArgs)



state 118

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    Exp  ->  VarAtr @15 '[' Exp . ']'   (rule 66)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73
    ']' 	shift, and go to state 135



state 119

    DoWhile  ->  DO @12 ConjInst WHILE TestExpL . ';'   (rule 50)

    ';' 	shift, and go to state 136



state 120

    Atrib  ->  VarAtr @6 '[' Exp ']' . '=' Exp   (rule 37)

    '=' 	shift, and go to state 137



state 121

    Funcao  ->  '#' Tipo var @4 '(' ListaArg ')' . @5 '{' ListaDecla ListInst '}'   (rule 13)

    $default	reduce using rule 12 (@5)

    @5  	go to state 138



state 122

    ListaArg2  ->  ListaArg2 ',' . Tipo var   (rule 17)

    INT 	shift, and go to state 14
    VOID	shift, and go to state 15

    Tipo	go to state 139



state 123

    ListaArg2  ->  Tipo var .   (rule 16)

    $default	reduce using rule 16 (ListaArg2)



state 124

    ExpL  ->  '(' ExpL ')' . @17 '&' '&' '(' ExpL ')'   (rule 81)
    ExpL  ->  '(' ExpL ')' . '|' '|' '(' ExpL ')'   (rule 82)

    '|' 	shift, and go to state 140

    $default	reduce using rule 80 (@17)

    @17 	go to state 141



state 125

    ExpL  ->  Exp '=' '=' . Exp   (rule 74)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 142



state 126

    ExpL  ->  Exp '!' '=' . Exp   (rule 75)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 143



state 127

    ExpL  ->  Exp '>' '=' . Exp   (rule 76)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 144



state 128

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp '>' Exp .   (rule 79)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 79 (ExpL)



state 129

    ExpL  ->  Exp '<' '=' . Exp   (rule 77)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 145



state 130

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp '<' Exp .   (rule 78)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 78 (ExpL)



state 131

    ForHeader  ->  '(' ForAtrib ';' @13 ExpL . ';' @14 ForAtrib ')'   (rule 54)

    ';' 	shift, and go to state 146



state 132

    If  ->  IF @7 TestExpL @8 ConjInst @9 . Else   (rule 43)

    ELSE	shift, and go to state 147

    ELSE	[reduce using rule 44 (Else)]
    $default	reduce using rule 44 (Else)

    Else	go to state 148



state 133

    Exp  ->  var @16 '(' FunArgs ')' .   (rule 68)

    $default	reduce using rule 68 (Exp)



state 134

    FunArgs2  ->  FunArgs2 ',' . Exp   (rule 72)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 149



state 135

    Exp  ->  VarAtr @15 '[' Exp ']' .   (rule 66)

    $default	reduce using rule 66 (Exp)



state 136

    DoWhile  ->  DO @12 ConjInst WHILE TestExpL ';' .   (rule 50)

    $default	reduce using rule 50 (DoWhile)



state 137

    Atrib  ->  VarAtr @6 '[' Exp ']' '=' . Exp   (rule 37)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 44

    VarAtr	go to state 45
    Exp 	go to state 150



state 138

    Funcao  ->  '#' Tipo var @4 '(' ListaArg ')' @5 . '{' ListaDecla ListInst '}'   (rule 13)

    '{' 	shift, and go to state 151



state 139

    ListaArg2  ->  ListaArg2 ',' Tipo . var   (rule 17)

    var 	shift, and go to state 152



state 140

    ExpL  ->  '(' ExpL ')' '|' . '|' '(' ExpL ')'   (rule 82)

    '|' 	shift, and go to state 153



state 141

    ExpL  ->  '(' ExpL ')' @17 . '&' '&' '(' ExpL ')'   (rule 81)

    '&' 	shift, and go to state 154



state 142

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp '=' '=' Exp .   (rule 74)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 74 (ExpL)



state 143

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp '!' '=' Exp .   (rule 75)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 75 (ExpL)



state 144

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp '>' '=' Exp .   (rule 76)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 76 (ExpL)



state 145

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    ExpL  ->  Exp '<' '=' Exp .   (rule 77)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 77 (ExpL)



state 146

    ForHeader  ->  '(' ForAtrib ';' @13 ExpL ';' . @14 ForAtrib ')'   (rule 54)

    $default	reduce using rule 53 (@14)

    @14 	go to state 155



state 147

    Else  ->  ELSE . ConjInst   (rule 45)

    '{' 	shift, and go to state 63

    $default	reduce using rule 22 (ConjInst)

    ConjInst	go to state 156



state 148

    If  ->  IF @7 TestExpL @8 ConjInst @9 Else .   (rule 43)

    $default	reduce using rule 43 (If)



state 149

    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)
    FunArgs2  ->  FunArgs2 ',' Exp .   (rule 72)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 72 (FunArgs2)



state 150

    Atrib  ->  VarAtr @6 '[' Exp ']' '=' Exp .   (rule 37)
    Exp  ->  Exp . '+' Exp   (rule 57)
    Exp  ->  Exp . '-' Exp   (rule 58)
    Exp  ->  Exp . '%' Exp   (rule 59)
    Exp  ->  Exp . '*' Exp   (rule 60)
    Exp  ->  Exp . '/' Exp   (rule 61)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '/' 	shift, and go to state 72
    '%' 	shift, and go to state 73

    $default	reduce using rule 37 (Atrib)



state 151

    Funcao  ->  '#' Tipo var @4 '(' ListaArg ')' @5 '{' . ListaDecla ListInst '}'   (rule 13)

    $default	reduce using rule 8 (ListaDecla)

    ListaDecla	go to state 157



state 152

    ListaArg2  ->  ListaArg2 ',' Tipo var .   (rule 17)

    $default	reduce using rule 17 (ListaArg2)



state 153

    ExpL  ->  '(' ExpL ')' '|' '|' . '(' ExpL ')'   (rule 82)

    '(' 	shift, and go to state 158



state 154

    ExpL  ->  '(' ExpL ')' @17 '&' . '&' '(' ExpL ')'   (rule 81)

    '&' 	shift, and go to state 159



state 155

    ForHeader  ->  '(' ForAtrib ';' @13 ExpL ';' @14 . ForAtrib ')'   (rule 54)

    var 	shift, and go to state 25

    $default	reduce using rule 56 (ForAtrib)

    VarAtr	go to state 28
    Atrib	go to state 61
    ForAtrib	go to state 160



state 156

    Else  ->  ELSE ConjInst .   (rule 45)

    $default	reduce using rule 45 (Else)



state 157

    ListaDecla  ->  ListaDecla . Decla   (rule 7)
    Funcao  ->  '#' Tipo var @4 '(' ListaArg ')' @5 '{' ListaDecla . ListInst '}'   (rule 13)

    INT 	shift, and go to state 3
    WHILE	shift, and go to state 17
    FOR 	shift, and go to state 18
    IF  	shift, and go to state 19
    ELSE	shift, and go to state 20
    RETURN	shift, and go to state 21
    PRINTI	shift, and go to state 22
    SCANI	shift, and go to state 23
    DO  	shift, and go to state 24
    var 	shift, and go to state 25

    ListInst	go to state 161
    Decla	go to state 5
    Inst	go to state 27
    VarAtr	go to state 28
    Atrib	go to state 29
    Printi	go to state 30
    Scani	go to state 31
    If  	go to state 32
    While	go to state 33
    DoWhile	go to state 34
    For 	go to state 35



state 158

    ExpL  ->  '(' ExpL ')' '|' '|' '(' . ExpL ')'   (rule 82)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 82

    VarAtr	go to state 45
    Exp 	go to state 83
    ExpL	go to state 162



state 159

    ExpL  ->  '(' ExpL ')' @17 '&' '&' . '(' ExpL ')'   (rule 81)

    '(' 	shift, and go to state 163



state 160

    ForHeader  ->  '(' ForAtrib ';' @13 ExpL ';' @14 ForAtrib . ')'   (rule 54)

    ')' 	shift, and go to state 164



state 161

    ListInst  ->  ListInst . Inst   (rule 9)
    Funcao  ->  '#' Tipo var @4 '(' ListaArg ')' @5 '{' ListaDecla ListInst . '}'   (rule 13)

    WHILE	shift, and go to state 17
    FOR 	shift, and go to state 18
    IF  	shift, and go to state 19
    ELSE	shift, and go to state 20
    RETURN	shift, and go to state 21
    PRINTI	shift, and go to state 22
    SCANI	shift, and go to state 23
    DO  	shift, and go to state 24
    var 	shift, and go to state 25
    '}' 	shift, and go to state 165

    Inst	go to state 50
    VarAtr	go to state 28
    Atrib	go to state 29
    Printi	go to state 30
    Scani	go to state 31
    If  	go to state 32
    While	go to state 33
    DoWhile	go to state 34
    For 	go to state 35



state 162

    ExpL  ->  '(' ExpL ')' '|' '|' '(' ExpL . ')'   (rule 82)

    ')' 	shift, and go to state 166



state 163

    ExpL  ->  '(' ExpL ')' @17 '&' '&' '(' . ExpL ')'   (rule 81)

    var 	shift, and go to state 42
    num 	shift, and go to state 43
    '(' 	shift, and go to state 82

    VarAtr	go to state 45
    Exp 	go to state 83
    ExpL	go to state 167



state 164

    ForHeader  ->  '(' ForAtrib ';' @13 ExpL ';' @14 ForAtrib ')' .   (rule 54)

    $default	reduce using rule 54 (ForHeader)



state 165

    Funcao  ->  '#' Tipo var @4 '(' ListaArg ')' @5 '{' ListaDecla ListInst '}' .   (rule 13)

    $default	reduce using rule 13 (Funcao)



state 166

    ExpL  ->  '(' ExpL ')' '|' '|' '(' ExpL ')' .   (rule 82)

    $default	reduce using rule 82 (ExpL)



state 167

    ExpL  ->  '(' ExpL ')' @17 '&' '&' '(' ExpL . ')'   (rule 81)

    ')' 	shift, and go to state 168



state 168

    ExpL  ->  '(' ExpL ')' @17 '&' '&' '(' ExpL ')' .   (rule 81)

    $default	reduce using rule 81 (ExpL)



state 169

    $   	go to state 170



state 170

    $   	go to state 171



state 171

    $default	accept
